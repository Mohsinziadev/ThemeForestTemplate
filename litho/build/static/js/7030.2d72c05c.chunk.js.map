{"version":3,"file":"static/js/7030.2d72c05c.chunk.js","mappings":"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","sources":["Components/CustomIconWithText/CustomIconWithText.jsx","Components/CustomIconWithText/CustomIconWithTextData.jsx","Pages/Elements/CustomIconWithText.jsx"],"sourcesContent":["import React, { memo } from 'react'\n\n// Libraries\nimport { Row } from 'react-bootstrap'\nimport { m } from 'framer-motion'\nimport { PropTypes } from \"prop-types\";\n\n// Data\nimport { CustomIconWithTextData1 } from './CustomIconWithTextData'\n\nconst CustomIconWithText = (props) => {\n    return (\n        <Row className={props.grid}>\n            {\n                props.data.map((item, i) => {\n                    return (\n                        <m.div className=\"col landscape:md:!px-0\" key={i} {...{ ...props.animation, transition: { delay: i * props.animationDelay } }}>\n                            <div className={`${props.theme} ${props.className}`}>\n                                {item.img ? (\n                                    <img width=\"\" height=\"\" className=\"inline-block items-center justify-center mb-[30px]\" src={item.img} alt=\"featurebox\" />\n                                ) : (\n                                    <div className=\"feature-box-icon\">\n                                        {item.icon && <i className={item.icon}></i>}\n                                        {\n                                            props.theme === \"custom-icon-with-text02\" && (\n                                                <span className=\"feature-box-svg-shap drop-shadow\">\n                                                    <svg width=\"100\" viewBox=\"-100 -100 200 200\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"#fff\" d=\"M86.2,51.4C58.6,97.5,-53.4,96.5,-81.8,49.9C-110.3,3.3,-55.1,-88.8,0.9,-88.3C56.9,-87.8,113.7,5.3,86.2,51.4Z\"></path></svg>\n                                                </span>\n                                            )\n                                        }\n                                    </div>\n                                )}\n\n                                <div className=\"feature-box-content\">\n                                    {item.title && <h3 className=\"heading-6 title font-medium text-base font-serif text-darkgray mb-[10px]\">{item.title}</h3>}\n                                    {item.content && <p className=\"text-base text-center\">{item.content}</p>}\n                                </div>\n                            </div>\n                        </m.div>\n                    )\n                })\n            }\n        </Row>\n\n    )\n}\nCustomIconWithText.defaultProps = {\n    data: CustomIconWithTextData1,\n    theme: \"custom-icon-with-text01\",\n    animationDelay: 0.2,\n}\n\nCustomIconWithText.propTypes = {\n    className: PropTypes.string,\n    data: PropTypes.arrayOf(\n        PropTypes.exact({\n            img: PropTypes.string,\n            icon: PropTypes.string,\n            title: PropTypes.string,\n            content: PropTypes.string\n        })\n    ),\n    animation: PropTypes.object,\n    animationDelay: PropTypes.number,\n    theme: PropTypes.string,\n    grid: PropTypes.string,\n}\n\nexport default memo(CustomIconWithText);","const CustomIconWithTextData1 = [\n    {\n        img: \"https://via.placeholder.com/75x66\",\n        title: \"SIGNIFICANT BAR\",\n        content: \"Lorem ipsum dolor sit amet sectetura dipisicing\"\n    },\n    {\n        img: \"https://via.placeholder.com/75x66\",\n        title: \"WONDERFUL CUISINE\",\n        content: \"Lorem ipsum dolor sit amet sectetura dipisicing\"\n    },\n    {\n        img: \"https://via.placeholder.com/75x66\",\n        title: \"CLASSIC RESTAURANT\",\n        content: \"Lorem ipsum dolor sit amet sectetura dipisicing\"\n    },\n    {\n        img: \"https://via.placeholder.com/75x66\",\n        title: \"BEST MASTERCHEFS\",\n        content: \"Lorem ipsum dolor sit amet sectetura dipisicing\"\n    },\n]\n\nconst CustomIconWithTextData2 = [\n\n    {\n        icon: \"line-icon-Navigation-LeftWindow\",\n        title: \"Amazing layouts\",\n        content: \"Lorem ipsum is simply dummy text of the printing typesetting lorem ipsum been text.\"\n    },\n    {\n        icon: \"line-icon-Cursor-Click2\",\n        title: \"No coding required\",\n        content: \"Lorem ipsum is simply dummy text of the printing typesetting lorem ipsum been text.\"\n    },\n    {\n        icon: \"line-icon-Like-2\",\n        title: \"Easy to customize\",\n        content: \"Lorem ipsum is simply dummy text of the printing typesetting lorem ipsum been text.\"\n    },\n    {\n        icon: \"line-icon-Talk-Man\",\n        title: \"Customer satisfaction\",\n        content: \"Lorem ipsum is simply dummy text of the printing typesetting lorem ipsum been text.\"\n    },\n    {\n        icon: \"line-icon-Paper-Plane\",\n        title: \"Blazing performance\",\n        content: \"Lorem ipsum is simply dummy text of the printing typesetting lorem ipsum been text.\"\n    },\n    {\n        icon: \"line-icon-Heart\",\n        title: \"Huge icon collection\",\n        content: \"Lorem ipsum is simply dummy text of the printing typesetting lorem ipsum been text.\"\n    }\n\n]\n\nexport { CustomIconWithTextData1, CustomIconWithTextData2 }","import React from 'react'\n\n// Libraries\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { fadeIn } from '../../Functions/GlobalAnimations'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport CustomIconWithText from '../../Components/CustomIconWithText/CustomIconWithText'\n\n// Data\nimport { CustomIconWithTextData1, CustomIconWithTextData2 } from '../../Components/CustomIconWithText/CustomIconWithTextData'\n\nconst CustomIconWithTextPage = () => {\n    return (\n        <>\n\n            {/* Section Start */}\n            <section className=\"bg-darkgray py-[25px]\">\n                <Container>\n                    <Row className=\"items-center justify-center mb-0\">\n                        <Col xl={8} lg={6}>\n                            <h1 className=\"font-serif text-white font-medium mb-0 md:text-center text-lg\">Custom icon with text</h1>\n                        </Col>\n                        <Col xl={4} lg={6} className=\"breadcrumb justify-end text-xs font-serif md:mt-[10px] mb-0 md:justify-center\">\n                            <ul className=\"xs-text-center\">\n                                <li><Link to=\"/\" aria-label=\"breadcrumb\" className=\"hover:text-white\">Home</Link></li>\n                                <li><Link to=\"#\" aria-label=\"breadcrumb\" onClick={(e) => e.preventDefault()} className=\"hover:text-white\">Elements</Link></li>\n                                <li>Custom icon with text</li>\n                            </ul>\n                        </Col>\n                    </Row>\n                </Container>\n            </section>\n            {/* Section End */}\n\n            {/* Section Start */}\n            <section className=\"bg-lightgray text-center py-[160px] lg:py-[120px] md:py-[95px] sm:py-[80px] xs:py-[50px]\">\n                <Container>\n                <Row>\n                    <Col className=\"mb-[6%]\">\n                    <h6 className=\"font-medium text-darkgray mb-[25px] lg:mb-[15px] font-serif xs:text-[20px]\">Custom icon with text style 01</h6>\n                    </Col>\n                </Row>\n                    <CustomIconWithText\n                        grid=\"row-cols-1 row-cols-lg-4 row-cols-sm-2 justify-center gap-y-10\"\n                        className=\"\"\n                        theme=\"custom-icon-with-text01\"\n                        data={CustomIconWithTextData1}\n                        animation={fadeIn} />\n                </Container>\n            </section>\n            {/* Section Edn */}\n\n            {/* Section Start */}\n            <section className=\"bg-lightgray border-t border-solid border-mediumgray text-center grid-rows-3 grid-cols-2 py-[160px] lg:py-[120px] md:py-[95px] sm:py-[80px] xs:py-[50px]\">\n                <Container>\n                <Row>\n                    <Col className=\"mb-[4%]\">\n                    <h6 className=\"font-medium text-darkgray mb-[25px] lg:mb-[15px] font-serif xs:text-[20px]\">Custom icon with text style 02</h6>\n                    </Col>\n                </Row>\n                    <CustomIconWithText\n                        grid=\"row-cols-1 row-cols-lg-3 row-cols-sm-2\"\n                        theme=\"custom-icon-with-text02\"\n                        data={CustomIconWithTextData2}\n                        animation={fadeIn} />\n                </Container>\n            </section>\n            {/* Section End */}\n        </>\n    )\n}\n\nexport default CustomIconWithTextPage"],"names":["CustomIconWithText","props","_jsx","Row","className","grid","children","data","map","item","i","m","div","_objectSpread","animation","transition","delay","animationDelay","_jsxs","concat","theme","img","width","height","src","alt","icon","viewBox","xmlns","fill","d","title","content","defaultProps","CustomIconWithTextData1","memo","CustomIconWithTextData2","_Fragment","Container","Col","xl","lg","Link","to","onClick","e","preventDefault","fadeIn"],"sourceRoot":""}