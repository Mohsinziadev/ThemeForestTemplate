{"version":3,"file":"static/js/60.f657c3cb.chunk.js","mappings":"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","sources":["Components/FancyText/FancyText.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\n// Libraries\nimport Atropos from \"atropos/react\";\nimport { m } from \"framer-motion\";\nimport { PropTypes } from \"prop-types\";\n\n// css\nimport \"../../Assets/scss/components/_textAnime.scss\"\n\nexport const TiltBox = (props) => {\n  return (\n    <m.div className=\"justify-center\" {...props.animation}>\n      <Atropos\n        highlight={false}\n        stretchX={0}\n        stretchY={0}\n        rotateTouch={false}\n        className={`my-atropos ${props.className} w-full`}\n      >\n        {props.children}\n      </Atropos>\n    </m.div>\n  );\n};\n\nexport const TextAnime = (props) => {\n  const wordwrapper = useRef(null);\n  const [index, setIndex] = useState(0);\n  const [maxLength, setMaxLength] = useState(0)\n  const [maxHeight, setMaxHeight] = useState(0)\n  const textEls = useRef({})\n  const style = {\n    \"--text-color\": typeof (props.color) === \"object\" ? `linear-gradient(to right, ${props.color.map(item => item)})` : props.color,\n    \"--line-color\":typeof (props.lineColor) === \"object\" ? `linear-gradient(to right, ${props.lineColor.map(item => item)})` : props.lineColor,\n  }\n\n  useEffect(() => {\n    const intervalId = setInterval(\n      () => {\n        setIndex((index) => {\n          if (index !== props.data.length - 1) {\n            return index + 1;\n          } else {\n            return 0;\n          }\n        })\n      }, props.duration\n    );\n    return () => clearTimeout(intervalId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    let maxWidth = 0,\n        maxheight = 0;\n    setTimeout(() => {\n      let cdWrapper = wordwrapper.current.querySelectorAll(\".cd-words-wrapper > .cd-text\");\n      cdWrapper.forEach(function (item) {\n        maxWidth = item.clientWidth > maxWidth ? item.clientWidth : maxWidth;\n        maxheight = item.clientHeight > maxheight ? item.clientHeight : maxheight;\n      })\n      setMaxLength(maxWidth+10)\n      setMaxHeight(maxheight)\n    }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <m.div\n      initial={{ width: \"auto\" }}\n      animate={{ width: maxLength, height: maxHeight }}\n      ref={wordwrapper}\n      className={`cd-words-wrapper${index ? \" is-loading\" : \"\"}${props.animation ? ` ${props.animation}` : \"\"}${props.className ? ` ${props.className}` : \"\"}`}\n      style={style}\n    >\n      {props.data.map((item, i) => {\n        return (\n          <span\n            key={i}\n            className={`cd-text${index === i ? \" is-visible\" : \" is-hidden\"}`}\n            ref={el => textEls.current[i] = el}\n          >\n            {props.animation === \"type\" || props.animation === \"flip\"\n              ? item.split(\"\").map((el, j) => {\n                return (\n                  <i key={j} className={index === i ? \"in\" : \"out\"} style={{ transitionDelay: `${(props.charSpeed / item.split(\"\").length) / 2000 * j}s` }}>\n                    {el}\n                  </i>\n                );\n              })\n              : item}\n          </span>\n        );\n      })}\n    </m.div>\n  );\n};\n\nTiltBox.defaultProps = {\n  className: \"font-serif\",\n};\n\nTiltBox.propTypes = {\n  className: PropTypes.string,\n  animation: PropTypes.object\n}\n\nTextAnime.propTypes = {\n  className: PropTypes.string,\n  animation: PropTypes.string,\n  duration: PropTypes.number,\n  color: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string\n  ]),\n  lineColor: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string\n  ]),\n}"],"names":["TiltBox","props","_jsx","m","div","_objectSpread","className","animation","children","Atropos","highlight","stretchX","stretchY","rotateTouch","concat","TextAnime","wordwrapper","useRef","_useState","useState","_useState2","_slicedToArray","index","setIndex","_useState3","_useState4","maxLength","setMaxLength","_useState5","_useState6","maxHeight","setMaxHeight","textEls","style","color","map","item","lineColor","useEffect","intervalId","setInterval","data","length","duration","clearTimeout","maxWidth","maxheight","setTimeout","current","querySelectorAll","forEach","clientWidth","clientHeight","initial","width","animate","height","ref","i","el","split","j","transitionDelay","charSpeed","defaultProps"],"sourceRoot":""}