{"version":3,"file":"static/js/8025.87d52036.chunk.js","mappings":"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","sources":["Components/Blogs/BlogGrid.jsx","Components/Blogs/HelperComponents/Pagination.jsx","Components/Portfolio/Filter.jsx","Pages/Blogs/AuthorPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, memo } from \"react\";\n\n// Libraries\nimport { Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport { m } from \"framer-motion\";\n\n// Components\nimport Pagination from \"./HelperComponents/Pagination\";\nimport Filter from \"../Portfolio/Filter\";\n\n// Data\nimport { authorData, blogData } from \"./BlogData\";\n\n// Filter the blog data category wise\nconst blogGridData = blogData.filter((item) => item.blogType === \"grid\");\n\nconst BlogGrid = (props) => {\n  const blogWrapper = useRef();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    import(\"../../Functions/Utilities\").then(module => {\n      const grid = module.initializeIsotop(blogWrapper.current)\n      grid.on('arrangeComplete', () => setLoading(false));\n    })\n  }, [])\n\n  const style = {\n    \"--overlay-color\": typeof (props.overlay) === \"object\" ? `linear-gradient(to right top, ${props.overlay.map((item, i) => item)})` : props.overlay\n  }\n\n  const handleFilterChange = () => {\n    blogWrapper.current.querySelectorAll(\"li\").forEach(item => item.childNodes[0]?.classList.add(\"appear\"))\n  }\n\n  return (\n    <div className=\"grid-wrapper\">\n      {/* Filter Start */}\n      <Filter title={props.title} filterData={props.filterData} onFilterChange={handleFilterChange} />\n      {/* Filter End */}\n\n      {/* Grid Start */}\n      <ul ref={blogWrapper} className={`grid-container${props.grid ? ` ${props.grid}` : \"\"}${loading ? \" loading\" : \"\"}${props.filter === false ? \"\" : \" mt-28 md:mt-[4.5rem] sm:mt-8\"}`}>\n        <li className=\"grid-sizer\"></li>\n        {props.data.map((item, i) => {\n          return (\n            <li className={`grid-item${item.double_col ? \" grid-item-double\" : \"\"} ${item.category.map(item => item.split(\" \").join(\"\")).toString().split(\",\").join(\" \").toLowerCase()}`} key={i} >\n              <m.div className=\"blog-grid rounded-[5px] overflow-hidden\"\n                initial={{ opacity: 0 }}\n                whileInView={!loading && { opacity: 1 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.9, ease: \"easeOut\" }}\n              >\n                <div className=\"blog-post relative overflow-hidden\" style={style}>\n                  {(item.link || item.img) && (\n                    <Link aria-label=\"link\" to={`${props.link}${[item.id]}`}>\n                      <img height={245} width={350} src={item.img} alt=\"blog\" />\n                    </Link>\n                  )}\n                  {(item.link || item.category) && (\n                    <Link aria-label=\"link\"\n                      to={`/blogs/category/${[item.category[0].toString().split(\" \").join(\"\").toLowerCase()]}`}\n                      className=\"blog-grid-catagory bg-[#171717bf] font-serif text-white text-xxs uppercase px-[13px] py-[6px] rounded-[2px] absolute top-[23px] right-[23px]\">\n                      {item.category[0]}\n                    </Link>\n                  )}\n                </div>\n                <div className=\"px-12 py-10 bg-white sm:px-8 xs:px-12\">\n                  {item.date && (<span className=\"mb-[10px] text-sm font-serif inline-block\" > {item.date} </span>)}\n                  {(item.link || item.title) && (<Link aria-label=\"link\" to={`${props.link}${[item.id]}`} className=\"font-serif mb-[15px] text-xmd block font-medium text-darkgray hover:text-basecolor\" > {item.title} </Link>)}\n                  {item.content && (<p className=\"mb-[25px] md:mb-[20px] sm:mb-[15px]\"> {item.content} </p>)}\n                  <div className=\"flex items-center\">\n                    {\n                      authorData.filter(author => author.id === item.author) && (\n                        <>\n                          <img width={30} height={30} className=\"w-[30px] rounded-full mr-[10px]\" src={authorData.filter(author => author.id === item.author)[0].img} alt={authorData.filter(author => author.id === item.author)[0].name} />\n                          <span className=\"font-serif text-sm mr-auto\">\n                            By <Link aria-label=\"link\" to={`/blogs/author/${item.author}`} className=\"hover:text-basecolor\">{authorData.filter(author => author.id === item.author)[0].name}</Link>\n                          </span>\n                        </>\n                      )}\n                    {(item.link || item.likes) && (<Link aria-label=\"link\" to=\"#\" className=\"items-center flex justify-center text-xs font-serif hover:text-basecolor\" >\n                      <i className=\"far fa-heart mr-[4px]\"></i>\n                      <span className=\"text-xs font-serif\">{item.likes}</span>\n                    </Link>\n                    )}\n                  </div>\n                </div>\n              </m.div>\n            </li>\n          );\n        })}\n      </ul>\n      {/* Grid End */}\n\n      {/* Pagination Start */}\n      {props.pagination === true && (\n        <div className=\"flex justify-center mt-[7.5rem] md:mt-20\">\n          <Pagination />\n        </div>\n      )}\n      {/* Pagination End  */}\n    </div>\n  );\n};\n\nBlogGrid.defaultProps = {\n  filter: false,\n  data: blogGridData,\n  link: \"/blog-types/blog-standard-post/\"\n};\n\nBlogGrid.propTypes = {\n  pagination: PropTypes.bool,\n  title: PropTypes.string,\n  grid: PropTypes.string,\n  link: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number,\n      category: PropTypes.array,\n      tags: PropTypes.array,\n      blogType: PropTypes.string,\n      img: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      author: PropTypes.number,\n      likes: PropTypes.number,\n      comments: PropTypes.number,\n      date: PropTypes.string,\n      double_col: PropTypes.bool\n    })\n  ),\n};\n\nexport default memo(BlogGrid);","import React from 'react'\n\n//Libraries\nimport { Link } from \"react-router-dom\"\n\nconst Pagination = () => {\n  return (\n    <ul className=\"pagination pagination-style-01 font-sans font-medium items-center\">\n      <li className=\"page-item\">\n        <Link aria-label=\"link\" className=\"page-link\" to=\"#\">\n          <i className=\"feather-arrow-left text-lg\"></i>\n        </Link>\n      </li>\n      <li className=\"page-item\">\n        <Link aria-label=\"link\" className=\"page-link\" to=\"#\"> 01 </Link>\n      </li>\n      <li className=\"page-item active\">\n        <Link aria-label=\"link\" className=\"page-link\" to=\"#\"> 02 </Link>\n      </li>\n      <li className=\"page-item\">\n        <Link aria-label=\"link\" className=\"page-link\" to=\"#\"> 03 </Link>\n      </li>\n      <li className=\"page-item\">\n        <Link aria-label=\"link\" className=\"page-link\" to=\"#\"> 04 </Link>\n      </li>\n      <li className=\"page-item\">\n        <Link aria-label=\"link\" className=\"page-link\" to=\"#\">\n          <i className=\"feather-arrow-right text-lg\"></i>\n        </Link>\n      </li>\n    </ul>\n  )\n}\n\nexport default Pagination","import React from \"react\";\r\n\r\n// Libraries\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst Filter = (props) => {\r\n\r\n    const handleFilterChange = () => {\r\n        props.onFilterChange && props.onFilterChange()\r\n    }\r\n\r\n    return (\r\n        (props.title || props.filterData) && (\r\n            <Container className=\"mb-24 md:mb-[4.5rem] sm:mb-8\">\r\n                <Row className={`${props.title ? \"justify-between\" : \"justify-center\"} items-center md:justify-center md:items-center md:text-center md:flex-col`}>\r\n                    {\r\n                        props.title && (\r\n                            <Col xs=\"auto\" className=\"md:mb-[30px]\"><h3 className=\"heading-4 font-serif m-0 p-0 font-semibold text-darkgray tracking-[-1px]\">{props.title}</h3></Col>\r\n                        )\r\n                    }\r\n                    <Col xs=\"auto\">\r\n                        {\r\n                            props.filterData && (\r\n                                <ul className=\"filter-menu items-center justify-center flex flex-wrap uppercase\">\r\n                                    {\r\n                                        props.filterData.map((item, i) => {\r\n                                            return (\r\n                                                <li key={i} className={`px-[20px]${i === 0 ? \" active\" : \"\"}`}><span data-filter={item.key} onClick={handleFilterChange}>{item.title}</span></li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            )\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n    title: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object\r\n    ]),\r\n    filterData: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            key: PropTypes.string,\r\n            title: PropTypes.string,\r\n        })\r\n    ),\r\n}","import React, { useEffect, useState } from \"react\";\n\n// Libraries\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { Parallax } from \"react-scroll-parallax\";\n\n// Components\nimport BlogGrid from \"../../Components/Blogs/BlogGrid\";\n\n// Data\nimport { blogData, authorData } from \"../../Components/Blogs/BlogData\";\n\nconst AuthorPage = (props) => {\n  const { author } = useParams();\n  const [data, setData] = useState(null);\n\n  // Get the author Details\n  const authorDetails = authorData.filter(\n    (item) => item.id === parseInt(author)\n  )[0];\n\n  useEffect(\n    () => {\n      const filteredData = blogData.filter(\n        (item) => item.author === parseInt(author)\n      );\n      setData(filteredData);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <div style={props.style}>\n      {/* Parallax Section Start */}\n      <div className=\"h-[450px] portrait:h-[450px] landscape:md:h-[320px] relative overflow-hidden sm:h-[300px] xxs:h-[300px] xs:portrait:h-[330px]\">\n        <Parallax className=\"bg-cover cover-background absolute -top-[100px] landscape:md:top-[-20px] left-0 w-full h-[100vh]\" translateY={[-40, 40]} style={{ backgroundImage: `url(/assets/img/webp/portfolio-bg2.webp)` }} ></Parallax>\n        <Container className=\"h-full relative\">\n          <Row className=\"justify-center h-full\">\n            <Col xl={6} lg={6} md={8} className=\"text-center flex justify-center flex-col font-serif\" >\n              <h1 className=\"text-gradient bg-gradient-to-r from-[#556fff] via-[#e05fc4] to-[#ff798e] mb-[15px] inline-block text-xmd\">\n                {authorDetails && authorDetails.name}\n              </h1>\n              <h2 className=\"text-darkgray font-medium -tracking-[1px] mb-0\">\n                Every new print and color of the season\n              </h2>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      {/* Parallax Section End */}\n\n      {/* Section Start */}\n      <section className=\"pt-0 relative px-[11%] overflow-hidden bg-lightgray xl:px-[2%] lg:py-[90px] md:pb-[75px] sm:pb-[50px] xs:px-0 xs:pt-[15px]\">\n        <Container fluid>\n          <Row>\n            <Col>\n              {data ? (\n                data.length > 0 ? (\n                  <BlogGrid\n                    link=\"/blog-types/blog-standard-post/\"\n                    overlay=\"#374162\"\n                    data={data}\n                    pagination={true}\n                    grid=\"grid grid-4col xl-grid-4col lg-grid-3col md-grid-2col sm-grid-2col xs-grid-1col gutter-extra-large\"\n                   \n                  />\n                ) : (\n                  <div className=\"text-center\">\n                    <img\n                      src=\"/assets/img/no-data-bro.svg\"\n                      className=\"w-[500px] mx-auto opacity-70\"\n                      alt=\"no-data\"\n                      width=\"\"\n                      height=\"\"\n                    />\n                  </div>\n                )\n              ) : (\n                <div className=\"text-center\">\n                  <img\n                    src=\"/assets/img/no-data-bro.svg\"\n                    className=\"w-[500px] mx-auto opacity-70\"\n                    alt=\"no-data\"\n                    width=\"\"\n                    height=\"\"\n                  />\n                </div>\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </section>\n      {/* Section Start */}\n    </div>\n  );\n};\n\nexport default AuthorPage;\n"],"names":["blogGridData","blogData","filter","item","blogType","BlogGrid","props","blogWrapper","useRef","_useState","useState","_useState2","_slicedToArray","loading","setLoading","useEffect","then","module","initializeIsotop","current","on","style","overlay","concat","map","i","_jsxs","className","children","_jsx","Filter","title","filterData","onFilterChange","querySelectorAll","forEach","_item$childNodes$","childNodes","classList","add","ref","grid","data","double_col","category","split","join","toString","toLowerCase","m","div","initial","opacity","whileInView","viewport","once","transition","duration","ease","link","img","Link","to","id","height","width","src","alt","date","content","authorData","author","_Fragment","name","likes","pagination","Pagination","defaultProps","memo","handleFilterChange","Container","Row","Col","xs","key","onClick","useParams","setData","authorDetails","parseInt","filteredData","Parallax","translateY","backgroundImage","xl","lg","md","fluid","length"],"sourceRoot":""}