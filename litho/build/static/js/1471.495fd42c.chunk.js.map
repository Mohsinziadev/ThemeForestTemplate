{"version":3,"file":"static/js/1471.495fd42c.chunk.js","mappings":"6OAiBMA,EAAe,SAACC,GACpB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAS,GAAAC,OAAKJ,EAAMK,KAAI,sBAAqBC,SAE9CN,EAAMO,KAAKC,KAAI,SAACC,EAAMC,GACpB,OACET,EAAAA,EAAAA,KAACU,EAAAA,EAAEC,KAAGC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAASV,UAAS,MAAAC,OAAQJ,EAAMc,MAAK,IAAAV,OAAOJ,EAAMc,OAAU,IAAEV,OAAGJ,EAAMG,UAAS,IAAAC,OAAOJ,EAAMG,WAAc,MAAKU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUb,EAAMe,WAAS,IAAEC,WAAY,CAAEC,MAAOP,EAAIV,EAAMkB,eAAgBC,KAAMnB,EAAMoB,oBAAqBC,SAAUrB,EAAMsB,sBAAmB,IAAAhB,UAClQiB,EAAAA,EAAAA,MAAA,OAAKpB,UAAU,oBAAmBG,SAAA,CAE9BG,EAAKe,KACHvB,EAAAA,EAAAA,KAAA,OAAKwB,OAAQ,GAAIC,MAAO,GAAIvB,UAAU,qDAAqDwB,IAAKlB,EAAKe,IAAKI,IAAI,eAG9GnB,EAAKoB,KAAwB,sBAAhB7B,EAAMc,OAAgCb,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CAAC,aAAW,gBAAgBC,GAAG,IAAGzB,UAACL,EAAAA,EAAAA,KAAA,KAAGE,UAAWM,EAAKoB,UAAoB5B,EAAAA,EAAAA,KAAA,KAAGE,UAAWM,EAAKoB,OAGnJpB,EAAKuB,UAAY/B,EAAAA,EAAAA,KAAA,QAAME,UAAU,wCAAuCG,SAAEG,EAAKuB,YAE7E/B,EAAAA,EAAAA,KAAA,QAAME,UAAU,wCAAuCG,SAAA,GAAAF,OAAKM,GAAK,EAAI,IAAM,IAAEN,OAAGM,EAAI,MAG5Fa,EAAAA,EAAAA,MAAA,OAAKpB,UAAU,sBAAqBG,SAAA,CACjCG,EAAKwB,QAAShC,EAAAA,EAAAA,KAAA,QAAME,UAAU,+BAA8BG,SAAEG,EAAKwB,QACnExB,EAAKyB,UAAWjC,EAAAA,EAAAA,KAAA,KAAAK,SAAIG,EAAKyB,UACT,sBAAhBlC,EAAMc,OAAgCb,EAAAA,EAAAA,KAACkC,EAAAA,QAAO,CAACC,UAAU,eAAeC,KAAK,IAAIlC,UAAU,oGAAoGmC,KAAK,KAAKC,MAAM,UAAUN,MAAM,cAAiB,OAEjPxB,EAAK+B,WAAa/B,EAAKgC,QAASxC,EAAAA,EAAAA,KAACkC,EAAAA,QAAO,CAACC,UAAU,eAAejC,UAAU,0HAA0H4B,GAAItB,EAAKgC,KAAMR,MAAOxB,EAAK+B,iBApB3N9B,EAwBhB,KAIR,EAEAX,EAAa2C,aAAe,CAC1BnC,KAAMoC,EAAAA,GACNzB,eAAgB,GAChBI,kBAAmB,GACnBF,oBAAqB,UACrBN,MAAO,qBAuBT,OAAe8B,EAAAA,EAAAA,MAAK7C,E","sources":["Components/IconWithText/IconWithText.jsx"],"sourcesContent":["import React, { memo } from 'react'\n\n// Libraries\nimport { Row } from 'react-bootstrap';\nimport { m } from 'framer-motion';\nimport { PropTypes } from \"prop-types\";\nimport { Link } from 'react-router-dom';\n\n// components\nimport Buttons from '../Button/Buttons'\n\n// Data\nimport { IconWithTextData_01 } from './IconWithTextData'\n\n// css\nimport \"../../Assets/scss/components/_iconwithtext.scss\"\n\nconst IconWithText = (props) => {\n  return (\n    <Row className={`${props.grid} md:justify-center`}>\n      {\n        props.data.map((item, i) => {\n          return (\n            <m.div key={i} className={`col${props.theme ? ` ${props.theme}` : \"\"}${props.className ? ` ${props.className}` : \"\"}`} {...{ ...props.animation, transition: { delay: i * props.animationDelay, ease: props.animationTransition, duration: props.animationDuration } }}>\n              <div className=\"rounded-md w-full\">\n                {\n                  item.img ? (\n                    <img height={42} width={51} className=\"inline-block items-center justify-center mb-[30px]\" src={item.img} alt=\"featurebox\" />\n                  )\n                    :\n                    item.icon ? (props.theme === \"icon-with-text-05\" ? <Link aria-label=\"link for icon\" to=\"#\"><i className={item.icon}></i></Link> : <i className={item.icon}></i>\n                    )\n                      :\n                      item.textIcon ? (<span className=\"text-basecolor inline-block icon-text\">{item.textIcon}</span>)\n                        :\n                        <span className=\"text-basecolor inline-block icon-text\">{`${i <= 9 ? \"0\" : \"\"}${i + 1}`}</span>\n                }\n\n                <div className='feature-box-content'>\n                  {item.title && <span className=\"font-medium title font-serif\">{item.title}</span>}\n                  {item.content && <p>{item.content}</p>}\n                  {props.theme === \"icon-with-text-11\" ? <Buttons ariaLabel=\"iconwithtext\" href=\"#\" className=\"font-medium font-serif uppercase btn-link after:h-[2px] after:bg-darkgray md:text-md md:mb-[15px]\" size=\"xl\" color=\"#232323\" title=\"Read more\" /> : \"\"}\n                </div>\n                {(item.linkTitle || item.link) && <Buttons ariaLabel=\"iconwithtext\" className=\"font-medium font-serif uppercase btn-link after:h-[1px] md:text-md md:mb-[15px] after:bg-basecolor hover:text-basecolor\" to={item.link} title={item.linkTitle} />}\n              </div>\n            </m.div>\n          )\n        })\n      }\n    </Row>\n  )\n}\n\nIconWithText.defaultProps = {\n  data: IconWithTextData_01,\n  animationDelay: 0.6,\n  animationDuration: 0.8,\n  animationTransition: \"circOut\",\n  theme: \"icon-with-text-01\",\n}\n\nIconWithText.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.exact({\n      icon: PropTypes.string,\n      title: PropTypes.string,\n      content: PropTypes.string,\n      linkTitle: PropTypes.string,\n      img: PropTypes.string,\n      link: PropTypes.string,\n    })\n  ),\n  animation: PropTypes.object,\n  animationDelay: PropTypes.number,\n  animationTransition: PropTypes.string,\n  theme: PropTypes.string,\n  grid: PropTypes.string,\n}\n\n\nexport default memo(IconWithText)"],"names":["IconWithText","props","_jsx","Row","className","concat","grid","children","data","map","item","i","m","div","_objectSpread","theme","animation","transition","delay","animationDelay","ease","animationTransition","duration","animationDuration","_jsxs","img","height","width","src","alt","icon","Link","to","textIcon","title","content","Buttons","ariaLabel","href","size","color","linkTitle","link","defaultProps","IconWithTextData_01","memo"],"sourceRoot":""}