{"version":3,"file":"static/js/2723.b8152623.chunk.js","mappings":"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","sources":["Components/Portfolio/Filter.jsx","Components/Portfolio/PortfolioSwitchImg.jsx","Pages/Portfolios/PortfolioSwitchImage/PortfolioSwitchImageFourColumn.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n// Libraries\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst Filter = (props) => {\r\n\r\n    const handleFilterChange = () => {\r\n        props.onFilterChange && props.onFilterChange()\r\n    }\r\n\r\n    return (\r\n        (props.title || props.filterData) && (\r\n            <Container className=\"mb-24 md:mb-[4.5rem] sm:mb-8\">\r\n                <Row className={`${props.title ? \"justify-between\" : \"justify-center\"} items-center md:justify-center md:items-center md:text-center md:flex-col`}>\r\n                    {\r\n                        props.title && (\r\n                            <Col xs=\"auto\" className=\"md:mb-[30px]\"><h3 className=\"heading-4 font-serif m-0 p-0 font-semibold text-darkgray tracking-[-1px]\">{props.title}</h3></Col>\r\n                        )\r\n                    }\r\n                    <Col xs=\"auto\">\r\n                        {\r\n                            props.filterData && (\r\n                                <ul className=\"filter-menu items-center justify-center flex flex-wrap uppercase\">\r\n                                    {\r\n                                        props.filterData.map((item, i) => {\r\n                                            return (\r\n                                                <li key={i} className={`px-[20px]${i === 0 ? \" active\" : \"\"}`}><span data-filter={item.key} onClick={handleFilterChange}>{item.title}</span></li>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            )\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Filter\r\n\r\nFilter.propTypes = {\r\n    title: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.object\r\n    ]),\r\n    filterData: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            key: PropTypes.string,\r\n            title: PropTypes.string,\r\n        })\r\n    ),\r\n}","import React, { memo, useEffect, useRef, useState } from 'react'\n\n// Libraries\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from \"prop-types\";\nimport { m } from \"framer-motion\";\n\n// Components\nimport Filter from './Filter';\n\n// Data\nimport { portfolioSwitchImgData } from './PortfolioData'\n\nconst PortfolioSwitchImg = (props) => {\n    const portfolioWrapper = useRef()\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        let allImages = portfolioWrapper.current.querySelectorAll(\"img\");\n\n        Promise.all(Array.prototype.slice.call(allImages).filter(img => !img.complete).map(img => new Promise(resolve => { img.onload = img.onerror = resolve; }))).then(() => {\n            import(\"../../Functions/Utilities\").then(module => {\n                const grid = module.initializeIsotop(portfolioWrapper.current)\n                grid.on('arrangeComplete', () => setLoading(false));\n            })\n        });\n    })\n\n    const handleFilterChange = () => {\n        portfolioWrapper.current.querySelectorAll(\"li\").forEach(item => item.childNodes[0]?.classList.add(\"appear\"))\n    }\n\n    return (\n        <div className={`${props.className ? ` ${props.className}` : \"\"} grid-wrapper`}>\n            {/* Filter Start */}\n            <Filter title={props.title} filterData={props.filterData} onFilterChange={handleFilterChange} />\n            {/* Filter End */}\n\n            {/* Grid Start */}\n            <ul ref={portfolioWrapper} className={`grid-container text-center${props.grid ? ` ${props.grid}` : \"\"}${loading ? \" loading\" : \"\"}`}>\n                <li className=\"grid-sizer\"></li>\n                {\n                    props.data.map((item, i) => {\n                        return (\n                            <li key={i} className={`grid-item${item.double_col ? \" grid-item-double\" : \"\"} ${item.category.toString().split(\",\").join(\" \").toLowerCase()}`}>\n                                <Link aria-label='link' target={props.target} to={item.link} className=\"no-underline\">\n                                    <m.div\n                                        className=\"portfolio-switchimg overflow-hidden\"\n                                        initial={{ opacity: 0 }}\n                                        whileInView={!loading && { opacity: 1 }}\n                                        viewport={{ once: true }}\n                                        transition={{ duration: 0.6, ease: \"easeOut\" }}\n                                    >\n                                        <div className=\"portfolio-image\">\n                                            {item.frontimg && <img src={item.frontimg} width={600} height={500} alt=\"portfolio-switch\" className=\"w-full\" />}\n                                            {item.backimg && <img className=\"portfolio-switch-image w-full\" src={item.backimg} width={600} height={500} alt=\"portfolio-switch\" />}\n                                        </div>\n                                        <div className=\"py-[30px] portfolio-content lg:py-[20px] xs:py-[15px]\">\n                                            {item.title && <span className=\"inline-block font-medium text-darkgray font-serif\">{item.title}</span>}\n                                            {item.subtitle && <span className=\"block text-spanishgray text-md\">{item.subtitle}</span>}\n                                        </div>\n                                    </m.div>\n                                </Link>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            {/* Grid End */}\n        </div>\n    )\n}\n\nPortfolioSwitchImg.defaultProps = {\n    data: portfolioSwitchImgData,\n}\n\nPortfolioSwitchImg.propTypes = {\n    grid: PropTypes.string,\n    title: PropTypes.string,\n    target: PropTypes.string,\n    data: PropTypes.arrayOf(\n        PropTypes.exact({\n            subtitle: PropTypes.string,\n            title: PropTypes.string,\n            frontimg: PropTypes.string,\n            backimg: PropTypes.string,\n            category: PropTypes.array,\n            link: PropTypes.string,\n            double_col: PropTypes.bool\n        })\n    )\n}\n\nexport default memo(PortfolioSwitchImg)","import React from 'react'\n\n// Libraries\nimport { Col, Container, Row } from 'react-bootstrap'\nimport { Parallax } from \"react-scroll-parallax\";\n\n// Components\nimport PortfolioSwitchImg from '../../../Components/Portfolio/PortfolioSwitchImg'\n\n// Data\nimport { FilterData, portfolioSwitchImgData } from '../../../Components/Portfolio/PortfolioData'\n\nconst PortfolioSwitchImgFourColPage = (props) => {\n  return (\n    <div style={props.style}>\n      {/* Parallax Section Start */}\n      <div className=\"py-[80px] h-auto overflow-hidden md:relative md:py-[40px]\">\n        <Parallax className=\"lg-no-parallax absolute top-[0] w-full h-full bg-no-repeat lg:bg-cover\" translateY={[-40, 40]} style={{ backgroundImage: `url(/assets/img/webp/portfolio-bg.webp)` }}></Parallax>\n        <Container className=\"h-full relative\">\n          <Row className=\"justify-center h-[300px] sm:h-[250px]\">\n            <Col xl={6} lg={6} sm={8} className=\"text-center flex justify-center flex-col font-serif\">\n              <h1 className=\"text-gradient bg-gradient-to-r from-[#556fff] via-[#e05fc4] to-[#ff798e] mb-[15px] inline-block text-xmd leading-[20px]\">Portfolio switch image four column</h1>\n              <h2 className=\"text-darkgray font-medium -tracking-[1px] mb-0\">Portfolio switch image</h2>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n      {/* Parallax Section End */}\n\n      {/* Section Start*/}\n      <section className=\"relative pt-0 py-[130px] px-[4%] lg:py-[90px] lg:px-[2%] md:py-[75px] sm:py-[50px] xs:px-0\">\n        <Container fluid>\n          <Row>\n            <Col xs={12} className=\"xs:px-0\">\n              <PortfolioSwitchImg\n                grid=\"grid grid-4col xl-grid-4col lg-grid-3col md-grid-2col sm-grid-2col xs-grid-1col gutter-extra-large text-center\"\n                filterData={FilterData}\n                data={portfolioSwitchImgData}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </section>\n      {/* Section End */}\n    </div>\n  )\n}\n\nexport default PortfolioSwitchImgFourColPage"],"names":["props","handleFilterChange","onFilterChange","title","filterData","_jsx","Container","className","children","_jsxs","Row","concat","Col","xs","map","item","i","key","onClick","PortfolioSwitchImg","portfolioWrapper","useRef","_useState","useState","_useState2","_slicedToArray","loading","setLoading","useEffect","allImages","current","querySelectorAll","Promise","all","Array","prototype","slice","call","filter","img","complete","resolve","onload","onerror","then","module","initializeIsotop","on","Filter","forEach","_item$childNodes$","childNodes","classList","add","ref","grid","data","double_col","category","toString","split","join","toLowerCase","Link","target","to","link","m","div","initial","opacity","whileInView","viewport","once","transition","duration","ease","frontimg","src","width","height","alt","backimg","subtitle","defaultProps","portfolioSwitchImgData","memo","style","Parallax","translateY","backgroundImage","xl","lg","sm","fluid","FilterData"],"sourceRoot":""}